
#include<stdio.h>
int fibonacci(int n);
int main() {
int n = 0, val = 0;
printf(“enter the value of n between 0 to 100”);
scanf(“%d”, &n);
val = fibonacci(n);
printf(“fibonacci value at position %d is %d”, n, val);
return 0;
}
// Recursive function to calculate the nth Fibonacci number.
// The Fibonacci sequence is defined as follows:
// F(0) = 0 (base case for n=0)
// F(1) = 1 (base case for n=1)
// F(n) = F(n-1) + F(n-2) for n > 1
int fibonacci(int n) {
if (n == 0)
return 0;
else if (n==1)
return 1;
else
return fibonacci(n-1) + fibonacci(n-2);
}

USE THIS CODE:
#include <stdio.h>
// Recursive function to print the fibonacci series
void fib(int n, int prev1, int prev2) {
// Base Case: when n gets less than 3
if (n < 3) {
return;
}
int curr = prev1 + prev2;

printf("%d\n", curr);
return fib(n - 1, prev2, curr);
}
// Function that handles the first two terms and calls the recursive function
void printFib(int n) {
// When the number of terms is less than 1
if (n < 1) {
printf("Invalid number of terms\n");
}
// When the number of terms is 1
else if (n == 1) {
printf("%d\n", 0);
}
// When the number of terms is 2
else if (n == 2) {
printf("%d\n%d\n", 0, 1);
}
// When number of terms greater than 2
else {
printf("%d\n%d\n", 0, 1);
fib(n, 0, 1);
}
return;
}
int main() {
int n = 9;
// Printing first 9 Fibonacci series terms
printFib(n);
return 0;
}
